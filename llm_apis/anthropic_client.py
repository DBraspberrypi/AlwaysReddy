from anthropic import Anthropic
import os

class AnthropicClient:
    def __init__(self, verbose=False):
        """Initialize the Anthropic client with the API key."""
        self.client = Anthropic(api_key=os.getenv('ANTHROPIC_API_KEY'))
        self.verbose = verbose

    def stream_completion(self, messages, model, temperature=0.7, max_tokens=2048, **kwargs):
        """Stream completion from the Anthropic API.

        Args:
            messages (list): List of messages.
            model (str): Model for completion.
            temperature (float): Temperature for sampling.
            max_tokens (int): Maximum number of tokens to generate.
            **kwargs: Additional keyword arguments.

        Yields:
            str: Text generated by the Anthropic API.
        """
        # Extract system message if present, otherwise set to None
        system_messages = [message['content'] for message in messages if message['role'] == 'system']
        system_message = system_messages[0] if system_messages else None
        
        # Filter out system messages from the messages list
        messages = [message for message in messages if message['role'] != 'system']

        try:
            # Prepare the arguments for the Anthropic API call
            api_args = {
                "model": model,
                "messages": messages,
                "temperature": temperature,
                "max_tokens": max_tokens,
            }
            
            # Only include the system parameter if a system message is present
            if system_message:
                api_args["system"] = system_message

            # Stream the completion
            stream = self.client.messages.stream(**api_args)
            
            with stream as stream:
                for text in stream.text_stream:
                    yield text
        except Exception as e:
            if self.verbose:
                import traceback
                traceback.print_exc()
            else:
                print(f"An error occurred streaming completion from Anthropic API: {e}")
            raise RuntimeError(f"An error occurred streaming completion from Anthropic API: {e}")